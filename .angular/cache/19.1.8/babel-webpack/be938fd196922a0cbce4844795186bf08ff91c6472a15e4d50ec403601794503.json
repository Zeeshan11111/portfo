{"ast":null,"code":"import { PLATFORM_ID } from '@angular/core';\nimport { isPlatformBrowser } from '@angular/common';\nimport * as i0 from \"@angular/core\";\nexport let ScrollAnimationDirective = /*#__PURE__*/(() => {\n  class ScrollAnimationDirective {\n    el;\n    renderer;\n    platformId;\n    observer;\n    constructor(el, renderer, platformId // ✅ Inject PLATFORM_ID\n    ) {\n      this.el = el;\n      this.renderer = renderer;\n      this.platformId = platformId;\n    }\n    ngAfterViewInit() {\n      if (isPlatformBrowser(this.platformId)) {\n        // ✅ Run only on browser\n        this.observer = new IntersectionObserver(entries => {\n          entries.forEach(entry => {\n            if (entry.isIntersecting) {\n              this.startAnimation();\n            } else {\n              this.stopAnimation();\n            }\n          });\n        }, {\n          threshold: 0.5\n        });\n        this.observer.observe(this.el.nativeElement);\n      }\n    }\n    startAnimation() {\n      this.renderer.removeClass(this.el.nativeElement, 'animate-slide-in');\n      void this.el.nativeElement.offsetWidth;\n      this.renderer.addClass(this.el.nativeElement, 'animate-slide-in');\n    }\n    stopAnimation() {\n      this.renderer.removeClass(this.el.nativeElement, 'animate-slide-in');\n    }\n    static ɵfac = function ScrollAnimationDirective_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || ScrollAnimationDirective)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.Renderer2), i0.ɵɵdirectiveInject(PLATFORM_ID));\n    };\n    static ɵdir = /*@__PURE__*/i0.ɵɵdefineDirective({\n      type: ScrollAnimationDirective,\n      selectors: [[\"\", \"appScrollAnimation\", \"\"]],\n      standalone: false\n    });\n  }\n  return ScrollAnimationDirective;\n})();","map":{"version":3,"names":["PLATFORM_ID","isPlatformBrowser","ScrollAnimationDirective","el","renderer","platformId","observer","constructor","ngAfterViewInit","IntersectionObserver","entries","forEach","entry","isIntersecting","startAnimation","stopAnimation","threshold","observe","nativeElement","removeClass","offsetWidth","addClass","i0","ɵɵdirectiveInject","ElementRef","Renderer2","selectors","standalone"],"sources":["C:\\Users\\zeeshan.rasool\\Desktop\\zeeshan\\my-portf\\src\\app\\directives\\scroll-animation.directive.ts"],"sourcesContent":["import { Directive, ElementRef, Renderer2, AfterViewInit, Inject, PLATFORM_ID } from '@angular/core';\r\nimport { isPlatformBrowser } from '@angular/common';\r\n\r\n@Directive({\r\n  selector: '[appScrollAnimation]',\r\n  standalone: false\r\n})\r\nexport class ScrollAnimationDirective implements AfterViewInit {\r\n  private observer!: IntersectionObserver;\r\n\r\n  constructor(\r\n    private el: ElementRef,\r\n    private renderer: Renderer2,\r\n    @Inject(PLATFORM_ID) private platformId: Object // ✅ Inject PLATFORM_ID\r\n  ) { }\r\n\r\n  ngAfterViewInit() {\r\n    if (isPlatformBrowser(this.platformId)) { // ✅ Run only on browser\r\n      this.observer = new IntersectionObserver(entries => {\r\n        entries.forEach(entry => {\r\n          if (entry.isIntersecting) {\r\n            this.startAnimation();\r\n          } else {\r\n            this.stopAnimation();\r\n          }\r\n        });\r\n      }, { threshold: 0.5 });\r\n\r\n      this.observer.observe(this.el.nativeElement);\r\n    }\r\n  }\r\n\r\n  private startAnimation() {\r\n    this.renderer.removeClass(this.el.nativeElement, 'animate-slide-in');\r\n    void this.el.nativeElement.offsetWidth;\r\n    this.renderer.addClass(this.el.nativeElement, 'animate-slide-in');\r\n  }\r\n\r\n  private stopAnimation() {\r\n    this.renderer.removeClass(this.el.nativeElement, 'animate-slide-in');\r\n  }\r\n}\r\n"],"mappings":"AAAA,SAAkEA,WAAW,QAAQ,eAAe;AACpG,SAASC,iBAAiB,QAAQ,iBAAiB;;AAMnD,WAAaC,wBAAwB;EAA/B,MAAOA,wBAAwB;IAIzBC,EAAA;IACAC,QAAA;IACqBC,UAAA;IALvBC,QAAQ;IAEhBC,YACUJ,EAAc,EACdC,QAAmB,EACEC,UAAkB,CAAC;IAAA,E;MAFxC,KAAAF,EAAE,GAAFA,EAAE;MACF,KAAAC,QAAQ,GAARA,QAAQ;MACa,KAAAC,UAAU,GAAVA,UAAU;IACrC;IAEJG,eAAeA,CAAA;MACb,IAAIP,iBAAiB,CAAC,IAAI,CAACI,UAAU,CAAC,EAAE;QAAE;QACxC,IAAI,CAACC,QAAQ,GAAG,IAAIG,oBAAoB,CAACC,OAAO,IAAG;UACjDA,OAAO,CAACC,OAAO,CAACC,KAAK,IAAG;YACtB,IAAIA,KAAK,CAACC,cAAc,EAAE;cACxB,IAAI,CAACC,cAAc,EAAE;YACvB,CAAC,MAAM;cACL,IAAI,CAACC,aAAa,EAAE;YACtB;UACF,CAAC,CAAC;QACJ,CAAC,EAAE;UAAEC,SAAS,EAAE;QAAG,CAAE,CAAC;QAEtB,IAAI,CAACV,QAAQ,CAACW,OAAO,CAAC,IAAI,CAACd,EAAE,CAACe,aAAa,CAAC;MAC9C;IACF;IAEQJ,cAAcA,CAAA;MACpB,IAAI,CAACV,QAAQ,CAACe,WAAW,CAAC,IAAI,CAAChB,EAAE,CAACe,aAAa,EAAE,kBAAkB,CAAC;MACpE,KAAK,IAAI,CAACf,EAAE,CAACe,aAAa,CAACE,WAAW;MACtC,IAAI,CAAChB,QAAQ,CAACiB,QAAQ,CAAC,IAAI,CAAClB,EAAE,CAACe,aAAa,EAAE,kBAAkB,CAAC;IACnE;IAEQH,aAAaA,CAAA;MACnB,IAAI,CAACX,QAAQ,CAACe,WAAW,CAAC,IAAI,CAAChB,EAAE,CAACe,aAAa,EAAE,kBAAkB,CAAC;IACtE;;uCAjCWhB,wBAAwB,EAAAoB,EAAA,CAAAC,iBAAA,CAAAD,EAAA,CAAAE,UAAA,GAAAF,EAAA,CAAAC,iBAAA,CAAAD,EAAA,CAAAG,SAAA,GAAAH,EAAA,CAAAC,iBAAA,CAMzBvB,WAAW;IAAA;;YANVE,wBAAwB;MAAAwB,SAAA;MAAAC,UAAA;IAAA;;SAAxBzB,wBAAwB;AAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}