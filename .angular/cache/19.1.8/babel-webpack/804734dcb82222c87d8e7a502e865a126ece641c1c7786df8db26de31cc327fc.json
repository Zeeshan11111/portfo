{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Directive, ElementRef, Renderer2, Inject, PLATFORM_ID } from '@angular/core';\nimport { isPlatformBrowser } from '@angular/common';\nlet ScrollAnimationDirective = class ScrollAnimationDirective {\n  el;\n  renderer;\n  platformId;\n  observer;\n  constructor(el, renderer, platformId // ✅ Inject PLATFORM_ID\n  ) {\n    this.el = el;\n    this.renderer = renderer;\n    this.platformId = platformId;\n  }\n  ngAfterViewInit() {\n    if (isPlatformBrowser(this.platformId)) {\n      // ✅ Run only on browser\n      this.observer = new IntersectionObserver(entries => {\n        entries.forEach(entry => {\n          if (entry.isIntersecting) {\n            this.startAnimation();\n          } else {\n            this.stopAnimation();\n          }\n        });\n      }, {\n        threshold: 0.5\n      });\n      this.observer.observe(this.el.nativeElement);\n    }\n  }\n  startAnimation() {\n    this.renderer.removeClass(this.el.nativeElement, 'animate-slide-in');\n    void this.el.nativeElement.offsetWidth;\n    this.renderer.addClass(this.el.nativeElement, 'animate-slide-in');\n  }\n  stopAnimation() {\n    this.renderer.removeClass(this.el.nativeElement, 'animate-slide-in');\n  }\n  static ctorParameters = () => [{\n    type: ElementRef\n  }, {\n    type: Renderer2\n  }, {\n    type: Object,\n    decorators: [{\n      type: Inject,\n      args: [PLATFORM_ID]\n    }]\n  }];\n};\nScrollAnimationDirective = __decorate([Directive({\n  selector: '[appScrollAnimation]',\n  standalone: false\n})], ScrollAnimationDirective);\nexport { ScrollAnimationDirective };","map":{"version":3,"names":["Directive","ElementRef","Renderer2","Inject","PLATFORM_ID","isPlatformBrowser","ScrollAnimationDirective","el","renderer","platformId","observer","constructor","ngAfterViewInit","IntersectionObserver","entries","forEach","entry","isIntersecting","startAnimation","stopAnimation","threshold","observe","nativeElement","removeClass","offsetWidth","addClass","args","__decorate","selector","standalone"],"sources":["C:\\Users\\DELL\\Desktop\\my-portf\\src\\app\\directives\\scroll-animation.directive.ts"],"sourcesContent":["import { Directive, ElementRef, Renderer2, AfterViewInit, Inject, PLATFORM_ID } from '@angular/core';\r\nimport { isPlatformBrowser } from '@angular/common';\r\n\r\n@Directive({\r\n  selector: '[appScrollAnimation]',\r\n  standalone: false\r\n})\r\nexport class ScrollAnimationDirective implements AfterViewInit {\r\n  private observer!: IntersectionObserver;\r\n\r\n  constructor(\r\n    private el: ElementRef,\r\n    private renderer: Renderer2,\r\n    @Inject(PLATFORM_ID) private platformId: Object // ✅ Inject PLATFORM_ID\r\n  ) { }\r\n\r\n  ngAfterViewInit() {\r\n    if (isPlatformBrowser(this.platformId)) { // ✅ Run only on browser\r\n      this.observer = new IntersectionObserver(entries => {\r\n        entries.forEach(entry => {\r\n          if (entry.isIntersecting) {\r\n            this.startAnimation();\r\n          } else {\r\n            this.stopAnimation();\r\n          }\r\n        });\r\n      }, { threshold: 0.5 });\r\n\r\n      this.observer.observe(this.el.nativeElement);\r\n    }\r\n  }\r\n\r\n  private startAnimation() {\r\n    this.renderer.removeClass(this.el.nativeElement, 'animate-slide-in');\r\n    void this.el.nativeElement.offsetWidth;\r\n    this.renderer.addClass(this.el.nativeElement, 'animate-slide-in');\r\n  }\r\n\r\n  private stopAnimation() {\r\n    this.renderer.removeClass(this.el.nativeElement, 'animate-slide-in');\r\n  }\r\n}\r\n"],"mappings":";AAAA,SAASA,SAAS,EAAEC,UAAU,EAAEC,SAAS,EAAiBC,MAAM,EAAEC,WAAW,QAAQ,eAAe;AACpG,SAASC,iBAAiB,QAAQ,iBAAiB;AAM5C,IAAMC,wBAAwB,GAA9B,MAAMA,wBAAwB;EAIzBC,EAAA;EACAC,QAAA;EACqBC,UAAA;EALvBC,QAAQ;EAEhBC,YACUJ,EAAc,EACdC,QAAmB,EACEC,UAAkB,CAAC;EAAA,E;IAFxC,KAAAF,EAAE,GAAFA,EAAE;IACF,KAAAC,QAAQ,GAARA,QAAQ;IACa,KAAAC,UAAU,GAAVA,UAAU;EACrC;EAEJG,eAAeA,CAAA;IACb,IAAIP,iBAAiB,CAAC,IAAI,CAACI,UAAU,CAAC,EAAE;MAAE;MACxC,IAAI,CAACC,QAAQ,GAAG,IAAIG,oBAAoB,CAACC,OAAO,IAAG;QACjDA,OAAO,CAACC,OAAO,CAACC,KAAK,IAAG;UACtB,IAAIA,KAAK,CAACC,cAAc,EAAE;YACxB,IAAI,CAACC,cAAc,EAAE;UACvB,CAAC,MAAM;YACL,IAAI,CAACC,aAAa,EAAE;UACtB;QACF,CAAC,CAAC;MACJ,CAAC,EAAE;QAAEC,SAAS,EAAE;MAAG,CAAE,CAAC;MAEtB,IAAI,CAACV,QAAQ,CAACW,OAAO,CAAC,IAAI,CAACd,EAAE,CAACe,aAAa,CAAC;IAC9C;EACF;EAEQJ,cAAcA,CAAA;IACpB,IAAI,CAACV,QAAQ,CAACe,WAAW,CAAC,IAAI,CAAChB,EAAE,CAACe,aAAa,EAAE,kBAAkB,CAAC;IACpE,KAAK,IAAI,CAACf,EAAE,CAACe,aAAa,CAACE,WAAW;IACtC,IAAI,CAAChB,QAAQ,CAACiB,QAAQ,CAAC,IAAI,CAAClB,EAAE,CAACe,aAAa,EAAE,kBAAkB,CAAC;EACnE;EAEQH,aAAaA,CAAA;IACnB,IAAI,CAACX,QAAQ,CAACe,WAAW,CAAC,IAAI,CAAChB,EAAE,CAACe,aAAa,EAAE,kBAAkB,CAAC;EACtE;;;;;;;;YA3BGnB,MAAM;MAAAuB,IAAA,GAACtB,WAAW;IAAA;EAAA,E;;AANVE,wBAAwB,GAAAqB,UAAA,EAJpC3B,SAAS,CAAC;EACT4B,QAAQ,EAAE,sBAAsB;EAChCC,UAAU,EAAE;CACb,CAAC,C,EACWvB,wBAAwB,CAkCpC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}