{"ast":null,"code":"import { PLATFORM_ID } from '@angular/core';\nimport { isPlatformBrowser } from '@angular/common';\nimport * as i0 from \"@angular/core\";\nexport let ScrollAnimationDirective = /*#__PURE__*/(() => {\n  class ScrollAnimationDirective {\n    el;\n    renderer;\n    platformId;\n    observer;\n    constructor(el, renderer, platformId // ✅ Inject PLATFORM_ID\n    ) {\n      this.el = el;\n      this.renderer = renderer;\n      this.platformId = platformId;\n    }\n    ngAfterViewInit() {\n      if (isPlatformBrowser(this.platformId)) {\n        // ✅ Run only on browser\n        this.observer = new IntersectionObserver(entries => {\n          entries.forEach(entry => {\n            if (entry.isIntersecting) {\n              this.startAnimation();\n            } else {\n              this.stopAnimation();\n            }\n          });\n        }, {\n          threshold: 0.5\n        });\n        this.observer.observe(this.el.nativeElement);\n      }\n    }\n    startAnimation() {\n      this.renderer.removeClass(this.el.nativeElement, 'animate-slide-in');\n      void this.el.nativeElement.offsetWidth;\n      this.renderer.addClass(this.el.nativeElement, 'animate-slide-in');\n    }\n    stopAnimation() {\n      this.renderer.removeClass(this.el.nativeElement, 'animate-slide-in');\n    }\n    static ɵfac = function ScrollAnimationDirective_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || ScrollAnimationDirective)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.Renderer2), i0.ɵɵdirectiveInject(PLATFORM_ID));\n    };\n    static ɵdir = /*@__PURE__*/i0.ɵɵdefineDirective({\n      type: ScrollAnimationDirective,\n      selectors: [[\"\", \"appScrollAnimation\", \"\"]],\n      standalone: false\n    });\n  }\n  return ScrollAnimationDirective;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}